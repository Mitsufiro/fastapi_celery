version: "3"
networks:
  web:
    external: true
  internal:
    external: false
services:
  db:
    image: postgres:13-alpine
#    command: bash -c "alembic revision --autogenerate -m "New Migration" && alembic upgrade head"
    volumes:
      - postgres_data:/var/lib/postgresql/data/
    ports:
      - "5432:5432"
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
      - POSTGRES_DB=${DB_NAME}
    networks:
      - internal
    labels:
      - traefik.enable=false

  #    pgadmin:
  #      image: dpage/pgadmin4
  #      environment:
  #        - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL}
  #        - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD}
  #      ports:
  #        - 5050:80
  #      depends_on:
  #        - db
  app:
    build: .
    command: bash -c "uvicorn main:app --host 0.0.0.0 --port 8000 --reload"
    volumes:
      - .:/fastapi_celery
    ports:
      - 8000:8000
    restart: always
    env_file:
      - ./.env
    depends_on:
      - db
      - celery_worker
    labels:
      - traefik.backend=blog
      - traefik.frontend.rule=Host:blog.89.111.137.57
      - traefik.docker.network=web
      - traefik.port=8000
    networks:
      - internal
      - web
  rabbitmq:
    image: "rabbitmq:3.9.11-management"
    ports:
      - "4360:4360"
      - "5672:5672"
      - "25672:25672"
      - "15672:15672"
    volumes:
      # - "rabbitmq_data:/bitnami"
      - /bitnami
    depends_on:
      - db
  celery_worker:
    container_name: celery_worker
    build: .
    command: celery -A worker.celery_worker worker -l info -Q test-queue
    volumes:
      - .:/fastapi_celery
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      #        - app
      - rabbitmq


  flower:
    container_name: flower
    build: .
    command: celery -A worker.celery_worker flower --port=5555 -l info -Q test-queue
    ports:
      - 5555:5555
    environment:
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
    depends_on:
      - app
      - rabbitmq
      - celery_worker
  traefik:
    build:
      context: .
      dockerfile: Dockerfile.traefik
    ports:
      - 80:80
      - 443:443
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock:ro"
      - "./traefik-public-certificates:/certificates"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.dashboard.rule=Host(`dashboard-fastapi-traefik.89.111.137.57`) && (PathPrefix(`/`)"
      - "traefik.http.routers.dashboard.tls=true"
      - "traefik.http.routers.dashboard.tls.certresolver=letsencrypt"
      - "traefik.http.routers.dashboard.service=api@internal"
      - "traefik.http.routers.dashboard.middlewares=auth"
      - "traefik.http.middlewares.auth.basicauth.users=admin:$apr1$X4CbX3Jr$10B.9P2Di.ZaKcxtEQin00"
volumes:
  postgres_data:
  traefik-public-certificates:
#  rabbitmq_data:
#    driver: local